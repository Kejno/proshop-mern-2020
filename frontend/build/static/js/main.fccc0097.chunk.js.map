{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","constants/mainConstants.js","screens/HomeScreen.js","actions/productActions.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","reviews","cart","cartItems","item","existItem","find","x","map","filter","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","subscribe","console","log","getState","Header","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Footer","Row","Col","Rating","value","text","color","style","defaultProps","Product","image","name","rating","numReviews","price","Card","Img","src","Body","Title","as","Text","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","BASE_URL","HomeScreen","dispatch","useDispatch","useSelector","useEffect","a","axios","get","data","response","message","key","sm","md","lg","xl","ProductScreen","history","match","useState","qty","setQty","params","description","countInStock","Image","alt","fluid","ListGroup","Item","Form","Control","onChange","e","target","Array","keys","Button","onClick","push","disabled","addCart","_id","setItem","stringify","CartScreen","location","productId","search","Number","split","removeFromCartHandler","removeFromCart","length","rounded","reduce","acc","toFixed","App","path","component","exact","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fccc0097.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n} from './reducers/productReducers.js'\r\nimport { cartReducer } from './reducers/cartReducers'\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  cart: cartReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : []\r\n\r\nconst initialState = {\r\n  cart: { cartItems: cartItemsFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\nstore.subscribe(() => {\r\n  console.log('Subscribe', store.getState())\r\n})\r\n\r\nexport default store\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_REQUEST,\r\n} from '../constants/productConstants.js'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return { loading: false, products: action.payload }\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, product: {} }\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload }\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n","import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload\r\n\r\n      const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        }\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return{\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload)\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n","import React from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Container, Navbar, Nav } from 'react-bootstrap'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand href='/'>ProShop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i>Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              <LinkContainer to='/login'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-user'></i>Login\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Col, Row } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>Copyright &copy; ProShop</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      {}\r\n\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n}\r\n\r\nRating.propTypes = {\r\n  value: PropTypes.number,\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string,\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n  const { id, image, name, rating, numReviews, price } = product\r\n  return (\r\n    <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/product/${id}`}>\r\n        <Card.Img src={image} variant='top' />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as='div'>\r\n          <Rating value={rating} text={`${numReviews} reviews`} color='red' />\r\n        </Card.Text>\r\n\r\n        <Card.Text as='h3'>${price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","export const BASE_URL= 'https://fk2ilt6u3a.execute-api.us-east-1.amazonaws.com/dev';\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product.js'\r\nimport Message from '../components/Message.js'\r\nimport Loader from '../components/Loader.js'\r\nimport { listProducts } from '../actions/productActions.js'\r\n\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n\r\n  const { loading, error, products } = productList\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <>\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          {products.map((product) => (\r\n            <Col key={product.id} sm={12} md={6} lg={4} xl={3}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import axios from 'axios';\r\nimport { BASE_URL } from '../constants/mainConstants';\r\n\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n} from '../constants/productConstants.js';\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n    const {\r\n      data: { products },\r\n    } = await axios.get(`${BASE_URL}/products`);\r\n\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: products });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const {\r\n      data: { product },\r\n    } = await axios.get(`${BASE_URL}/products/${id}`);\r\n\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: product });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport { listProductDetails } from '../actions/productActions.js'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n\r\n  const { loading, error, product } = productDetails\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id))\r\n  }, [dispatch, match])\r\n\r\n  const addToCardHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n  }\r\n\r\n  const {\r\n    image,\r\n    name,\r\n    rating,\r\n    numReviews,\r\n    price,\r\n    description,\r\n    countInStock,\r\n  } = product\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-dark my-3' to='/'>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          <Col md={6}>\r\n            <Image src={image} alt={name} fluid />\r\n          </Col>\r\n          <Col md={3}>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>{name}</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Rating\r\n                  value={rating}\r\n                  text={`${numReviews} reviews`}\r\n                  color='red'\r\n                />\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>Price: ${price}</ListGroup.Item>\r\n              <ListGroup.Item>Description: {description}</ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <Card>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Price:</Col>\r\n                    <Col>\r\n                      <strong>${price}</strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Status:</Col>\r\n                    <Col>\r\n                      <strong>\r\n                        {countInStock > 0 ? 'In Stock' : 'Out Stock'}\r\n                      </strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                {product.countInStock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Qty</Col>\r\n                      <Col>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={qty}\r\n                          onChange={(e) => setQty(e.target.value)}\r\n                        >\r\n                          {[...Array(product.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    onClick={addToCardHandler}\r\n                    className='btn-block'\r\n                    type='button'\r\n                    disabled={countInStock === 0}\r\n                  >\r\n                    Add To Card\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants'\r\n\r\nexport const addCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart=(id)=>(dispatch,getState)=>{\r\n  dispatch({\r\n    type:CART_REMOVE_ITEM,\r\n    payload:id\r\n  })\r\n\r\n  localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n  const cart = useSelector((state) => state.cart)\r\n\r\n  const { cartItems } = cart\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n    console.log(history)\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(addCart(item.product, Number(e.target.value)))\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Container } from 'react-bootstrap'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport ProductScreen from './screens/ProductScreen'\r\nimport CartScreen from './screens/CartScreen'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main className='py-3'>\r\n        <Container>\r\n          <Route path='/' component={HomeScreen} exact />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store.js'\r\nimport './bootstrap.min.css'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}